ADD FUNCTIONALITY - END-TO-END (INLINE + MULTI-ADD)

Goal
- Add empty rows inline in MDC tables (OData V4)
- Multi-row creation (press Add multiple times)
- Save commits all; Cancel discards all newly added rows

Where the code lives
- webapp/utility/CustomUtility.js  (main logic)
- webapp/controller/Home.controller.js  (exposes helpers to controller scope)
- Fragments: existing Add buttons call onAdd (no extra changes required)

Main functions (CustomUtility.js)
1) onAdd(oEvent)
   - Detects current table (Customers/Employees/Opportunities/Projects/SAPIdStatuses)
   - Gets MDC list binding: getRowBinding() or getBinding("items"|"rows")
   - Creates transient context: binding.create(emptyRowData)
   - Accumulates edit paths in model "edit" → editingPath (comma-separated)
     • First add → mode = "add"
     • Second+ add → mode = "add-multi"
   - Buttons: Save/Cancel enabled; Edit/Delete disabled; Add stays enabled (multi-add)

2) _executeAddWithRetry(oTable, oBinding, sTableId, oExistingContext)
   - Fallback when binding is not ready; mirrors onAdd behavior

3) _getRowBinding(oTable)
   - Returns MDC row/list binding safely (row/items/rows)

4) _resolveContextByPath(oTable, sPath)
   - Finds a context by its path (supports transient $uid paths)
   - Looks in binding contexts, then inner responsive table items

5) _createEmptyRowData(sTableId)
   - Returns sensible defaults per table; marks rows as: _isNew = true, isEditable = true

Save flow (onSaveButtonPress)
- Reads edit>/mode and edit>/editingPath
- If mode = "add-multi": splits paths, resolves all contexts, pushes input values, submits in one batch
- Submits with group "changesGroup" (see manifest.json model updateGroupId)
- Clears edit state, resets buttons, refreshes table

Cancel flow (onCancelButtonPress)
- If mode = "add-multi": resolves all paths and for each context:
  • If transient/new → context.delete()
  • Else, if _originalData exists → restore properties
- Does NOT call global model.resetChanges() (prevents nuking other edits)
- Clears edit state, disables Save/Cancel, re-enables Add, refreshes table

Controller wiring (Home.controller.js)
- Exposes helpers from CustomUtility so controller methods can call them:
  • _createEmptyRowData
  • _executeAddWithRetry
  • _resolveContextByPath
  • _getRowBinding

Button behavior (per table)
- Save: saveButton[/_emp/_oppr/_proj/_sap]
- Cancel: cancelButton[/_emp/_oppr/_proj/_sap]
- Add: remains enabled during add to allow multi-row creation
- Edit/Delete: disabled while adding

OData & persistence
- Creates use OData V4 ListBinding.create(...)
- Save uses oModel.submitBatch('changesGroup') → backend $batch
- With in-memory DB, data resets on restart; use SQLite/HANA for persistence

How to test
1) Multi-add: Click Add 3 times → editingPath holds 3 comma-separated paths → Save → single $batch with 3 creates
2) Multi-cancel: Click Add 2 times → Cancel → both transient rows removed, buttons reset
3) Network: DevTools → Network → check /odata/v4/my/$batch on Save

Notes
- MDC table APIs differ from sap.m.Table; ListBinding.create is the supported V4 way
- Context resolution supports transient paths; Save/Cancel work even without row selection
